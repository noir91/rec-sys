name: "CD Build"

on:
  workflow_run:
    workflows: ["CI Build"]
    branches: [main]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  ECR_URL: ${{ secrets.ECR_AUTH_URI }}
  ECR_REPO: ${{ secrets.ECR_REPO }}

jobs:
  build-and-push-ecr-image:
    name: Continuous Delivery
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
      
    steps:
      - name: Build project
        uses: actions/checkout@v4
        
      - name: Installing utilities and updating AWS CLI 
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Configuring AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:  ${{ secrets.AWS_LOGIN_ACCESS_ID}}
          aws-secret-access-key: ${{ secrets.AWS_LOGIN_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION}}
    
      
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_URL }}
          

      
        # Backend Image

      - name: Build, tag, and push backend image
        run: |
           docker build -t $ECR_URL/$ECR_REPO:backend -f api/Dockerfile .
           docker push $ECR_URL/$ECR_REPO:backend
        # Frontend Image

      - name: Build, tag, and push frontend image
        run: |
          docker build -t $ECR_URL/$ECR_REPO:frontend -f streamlit_app/Dockerfile .
          docker push $ECR_URL/$ECR_REPO:frontend
      


  continuous-deployment:
    name: Continuous Deployment
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credientials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:  ${{ secrets.AWS_LOGIN_ACCESS_ID}}
          aws-secret-access-key: ${{ secrets.AWS_LOGIN_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Login into ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Pulling Docker images
        run: |
          # Removing old images to avoid unnessacary disk usage on EC2
          docker system prune -af
          docker-compose pull
          docker-compose up -d